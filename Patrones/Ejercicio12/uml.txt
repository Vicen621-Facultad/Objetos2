@startuml
class FileSystem<<client>> {
    +totalSizeOcuped(): int
    +getBiggestFile(): File
    +getNewestFile(): File
    +search(nombre: String): IFile
    +searchAll(nombre: String): IFile[]
    +listContent(): String
}

interface IFile<<component>> {
    +getSize(): double
    +getBiggestFile(): File
    +getNewestFile(): File
    +search(String): IFile
    +searchAll(String): IFile[]
    +listContent(): String
    +addChild(): void
    +removeChild(): void
    +getChilds(): IFile[]
}

class File<<leaf>> implements IFile {
    -nombre: String
    -size: double
    -creacion: LocalDate

    +getSize(): double
    +getBiggestFile(): File
    +getNewestFile(): File
    +search(String): IFile
    +searchAll(String): IFile[]
    +listContent(): String
    +addChild(): void
    +removeChild(): void
    +getChilds(): IFile[]
}

class Folder<<composite>> implements IFile {
    -nombre: String
    -creacion: LocalDate

    +getSize(): double
    +getBiggestFile(): File
    +getNewestFile(): File
    +search(String): IFile
    +searchAll(String): IFile[]
    +listContent(): String
    +addChild(): void
    +removeChild(): void
    +getChilds(): IFile[]
}

FileSystem --> IFile: root
Folder *--> IFile: childs

@enduml